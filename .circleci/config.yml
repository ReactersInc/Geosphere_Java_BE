version: 2.1

orbs:
  slack: circleci/slack@5.1.1 #Added the Slack Orb

executors:
  deploy-executor:
    docker:
      - image: cimg/base:stable # CircleCI base image for jobs
    working_directory: ~/project # Set this to the location of your code repository

jobs:
  deploy_geosphere_backend:
    executor: deploy-executor
    steps:
      # Notify Slack of job success
      - slack/notify:
          event: always
          channel: "#circleci-deployment-query"
          custom: >
            {
              "blocks": [
                {
                  "type": "header",
                  "text": { "type": "plain_text", "text": "üöÄ JAVA Deployment Triggered!" }
                },
                {
                  "type": "section",
                  "text": { "type": "mrkdwn", "text": "*JAVA Geosphere Backend* deployment has *started*. üõ†Ô∏è" }
                }
              ]
            }
      # Step 1: Checkout the code
      - checkout

      # Step 2: Create .ssh directory
      - run:
          name: Create .ssh Directory
          command: mkdir -p ~/.ssh

      # Step 3: Add SSH Keys
      - add_ssh_keys:
          fingerprints:
            - $SSH_KEY_FINGERPRINT

      # Step 4: Add Oracle Server to known_hosts
      - run:
          name: Add AWS Server to Known Hosts
          command: ssh-keyscan -H $AWS_SERVER_IP >> ~/.ssh/known_hosts

      # Step 5: Execute Octorewards Deployment Script
      - run:
          name: Execute Java_GeoSphere Deployment Script
          command: ssh -vvv -o StrictHostKeyChecking=no ubuntu@$AWS_SERVER_IP ""

      # Notify Slack of job success
      - slack/notify:
          event: pass
          channel: "#circleci-deployment-query"
          custom: >
            {
              "blocks": [
                {
                  "type": "header",
                  "text": { "type": "plain_text", "text": "‚úÖ JAVA Deployment Success" }
                },
                {
                  "type": "section",
                  "text": { "type": "mrkdwn", "text": "*JAVA Geosphere Backend* has been deployed successfully! üéâ" }
                }
              ]
            }
      # Notify Slack of job failure
      - slack/notify:
          event: fail
          channel: "#circleci-deployment-query"
          custom: >
            {
               "blocks": [
                 {
                   "type": "header",
                   "text": { "type": "plain_text", "text": "‚ùå JAVA Deployment Failed" }
                 },
                 {
                   "type": "section",
                   "text": { "type": "mrkdwn", "text": "*JAVA Geosphere Backend* deployment failed! üö® Please check the CircleCI logs." }
                 }
               ]
             }
workflows:
  version: 2
  deploy_and_notify:
    jobs:
      # The deploy job will be triggered for respective repository based on the branch name
      - deploy_geosphere_backend:
          filters:
            branches:
              only:
                - main